@import "tailwindcss";

@custom-variant dark (&:is(.dark *));

@theme {
  --font-*: initial;
  --font-inter: "Inter", sans-serif;

  --color-*: initial;
  --color-current: currentColor;
  --color-transparent: transparent;
  --color-white: #ffffff;
  --color-black: #080321;
  --color-dark: #131b4d;
  --color-primary: #3e7dff;
  --color-body-color: #637381;
  --color-body-color-2: #637381;
  --color-gradient-1: #e4f2fe;
  --color-gradient-2: #ffeefe;
  --color-light-bg: #f5f8ff;

  --breakpoint-*: initial;
  --breakpoint-sm: 540px;
  --breakpoint-md: 768px;
  --breakpoint-lg: 992px;
  --breakpoint-xl: 1140px;
  --breakpoint-2xl: 1320px;

  --shadow-primary-hover: 0px 11px 20px rgba(139, 92, 246, 0.2);
  --shadow-black-hover: 0px 11px 30px rgba(7, 16, 45, 0.15);
  --shadow-award: 0px 3px 100px rgba(11, 5, 22, 0.07);
  --shadow-testimonial: 0px 5px 50px rgba(178, 152, 236, 0.05);
  --shadow-faq: 0px 4px 50px rgba(0, 0, 0, 0.03);
  --shadow-shape-1: 0px 0px 100px rgba(0, 0, 0, 0.03);
  --shadow-sticky: inset 0 -1px 0 0 rgba(0, 0, 0, 0.1);

  --drop-shadow-image: 25px 40px 100px rgba(0, 0, 0, 0.1);

  --z-index--1: -1;
}
body{
  background: #131313;
}
@utility container {
  margin-inline: auto;
  padding-inline: 1rem;
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
  button:not(:disabled),
  [role="button"]:not(:disabled) {
    cursor: pointer;
  }
}

@utility sticky {
  @apply fixed transition z-9999 bg-white/80;
  backdrop-filter: blur(5px);
  box-shadow: inset 0 -1px 0 0 rgba(0, 0, 0, 0.1);

  & .header-logo {
    @apply py-3 lg:py-2;
  }

  & .menu-scroll.active {
    @apply text-primary;
  }
}

@utility header-logo {
  .sticky & {
    @apply py-3 lg:py-2;
  }
}

@utility menu-scroll {
  .sticky &.active {
    @apply text-primary;
  }
}

@utility active {
  .sticky &.menu-scroll {
    @apply text-primary;
  }
}

@utility box {
  input#checkboxLabel:checked ~ & span {
    @apply opacity-100;
  }
}

@layer base {
  html {
    scroll-behavior: smooth;
  }
  body {
    @apply font-inter;
  }
}


body {
 
  font-family:'Ridley Grotesk';
  /*background: #000000;
  background: linear-gradient(180deg, rgba(0, 0, 0, 1) 0%, rgba(28, 145, 226, 1) 100%) ;
  color:#fff;*/
}

.timeline-content {
    
    border-radius: 0.75rem;
    box-shadow: 0 2px 12px rgba(37, 99, 235, 0.1);
    padding: 2rem 2.5rem;
    border-left: 6px solid #ff9900;
}
.timeline-item::before {
    content: "";
    position: absolute;
    top: 0.5rem;
    left: 12px;
    width: 32px;
    height: 32px;
    background: #000;
    border-radius: 50%;
    box-shadow: 0 0 8px rgba(37, 99, 235, 0.4);
    z-index: 1;
}

.timeline::before
 {
    content: "";
    position: absolute;
    top: 0;
    left: 28px;
    width: 4px;
    height: 100%;
    background-color: #e0e7ff;
    border-radius: 2px;
}
.timeline-item {
    position: relative;
    margin-bottom: 4rem;
    padding-left: 3.5rem;
}


@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.fadeIn {
  -webkit-animation-name: fadeIn;
  animation-name: fadeIn;
}

@-webkit-keyframes fadeInDown {
  from {
    opacity: 0;
    -webkit-transform: translate3d(0, -20px, 0);
    transform: translate3d(0, -20px, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    -webkit-transform: translate3d(0, -20px, 0);
    transform: translate3d(0, -20px, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

.fadeInDown {
  -webkit-animation-name: fadeInDown;
  animation-name: fadeInDown;
}

@-webkit-keyframes fadeInLeft {
  from {
    opacity: 0;
    -webkit-transform: translate3d(-20px, 0, 0);
    transform: translate3d(-20px, 0, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    -webkit-transform: translate3d(-20px, 0, 0);
    transform: translate3d(-20px, 0, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

.fadeInLeft {
  -webkit-animation-name: fadeInLeft;
  animation-name: fadeInLeft;
}

@-webkit-keyframes fadeInRight {
  from {
    opacity: 0;
    -webkit-transform: translate3d(20px, 0, 0);
    transform: translate3d(20px, 0, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    -webkit-transform: translate3d(20px, 0, 0);
    transform: translate3d(20px, 0, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

.fadeInRight {
  -webkit-animation-name: fadeInRight;
  animation-name: fadeInRight;
}

@-webkit-keyframes fadeInUp {
  from {
    opacity: 0;
    -webkit-transform: translate3d(0, 20px, 0);
    transform: translate3d(0, 20px, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    -webkit-transform: translate3d(0, 20px, 0);
    transform: translate3d(0, 20px, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

.fadeInUp {
  -webkit-animation-name: fadeInUp;
  animation-name: fadeInUp;
}

.animated {
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.animated.infinite {
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
}

.animated.delay-1s {
  -webkit-animation-delay: 1s;
  animation-delay: 1s;
}

.animated.delay-2s {
  -webkit-animation-delay: 2s;
  animation-delay: 2s;
}

.animated.delay-3s {
  -webkit-animation-delay: 3s;
  animation-delay: 3s;
}

.animated.delay-4s {
  -webkit-animation-delay: 4s;
  animation-delay: 4s;
}

.animated.delay-5s {
  -webkit-animation-delay: 5s;
  animation-delay: 5s;
}

.animated.fast {
  -webkit-animation-duration: 800ms;
  animation-duration: 800ms;
}

.animated.faster {
  -webkit-animation-duration: 500ms;
  animation-duration: 500ms;
}

.animated.slow {
  -webkit-animation-duration: 2s;
  animation-duration: 2s;
}

.animated.slower {
  -webkit-animation-duration: 3s;
  animation-duration: 3s;
}

@media (print), (prefers-reduced-motion: reduce) {
  .animated {
    -webkit-animation-duration: 1ms !important;
    animation-duration: 1ms !important;
    -webkit-transition-duration: 1ms !important;
    transition-duration: 1ms !important;
    -webkit-animation-iteration-count: 1 !important;
    animation-iteration-count: 1 !important;
  }
}
